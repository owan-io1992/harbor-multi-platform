name: Build and Merge Harbor Images

on:
  # push:

  release:
    types: [created]

jobs:
  build-x64:
    uses: ./.github/workflows/build-image-reusable.yml
    with:
      arch: x64
    permissions:
      contents: read
      packages: write
  build-arm64:
    uses: ./.github/workflows/build-image-reusable.yml
    with:
      arch: arm64
    permissions:
      contents: read
      packages: write
  merge-manifest:
    needs:
      - build-x64
      - build-arm64
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: vars
        run: |
          set -ex
          echo "VERSIONTAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Merge image manifest in GitHub Container Registry
        run: |
          set -ex
          images=(nginx-photon harbor-portal harbor-core harbor-jobservice registry-photon harbor-registryctl trivy-adapter-photon harbor-db redis-photon harbor-exporter)

          for image in ${images[@]}; do
            docker manifest create ghcr.io/${GITHUB_REPOSITORY}/${image}:${VERSIONTAG} \
              ghcr.io/${GITHUB_REPOSITORY}/${image}:${VERSIONTAG}_x64 \
              ghcr.io/${GITHUB_REPOSITORY}/${image}:${VERSIONTAG}_arm64
            docker manifest push ghcr.io/${GITHUB_REPOSITORY}/${image}:${VERSIONTAG}
          done

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: copy image to Docker Hub
        run: |
          set -ex
          images=(nginx-photon harbor-portal harbor-core harbor-jobservice registry-photon harbor-registryctl trivy-adapter-photon harbor-db redis-photon harbor-exporter)

          for image in ${images[@]}; do
            skopeo copy --multi-arch all docker://ghcr.io/${GITHUB_REPOSITORY}/${image}:${VERSIONTAG} docker://docker.io/${{ vars.DOCKERHUB_USERNAME }}/${image}:${VERSIONTAG}
          done
